import React from 'react'
import Aplication from './Aplication'
import '../styles/header.css'
import Pepper from './Pepper'

const Header = () => {
  const apps = [
    {
      src: (
        <svg viewBox='0 0 45 45' fill='none' xmlns='http://www.w3.org/2000/svg'>
          <defs>
            <clipPath id='clip0_24_22'>
              <rect width='45' height='45' fill='white' />
            </clipPath>
          </defs>
          <g
            clip-path='url(#clip0_24_22)'
            transform='matrix(1, 0, 0, 1, 0, -1.7763568394002505e-15)'
          >
            <path
              fill-rule='evenodd'
              clip-rule='evenodd'
              d='M 25.988 31.127 C 30.372 30.609 35.035 29.015 35.035 21.442 C 35.035 19.289 33.099 18.297 31.865 16.942 C 32.064 16.424 14.548 30.609 18.932 31.127 C 21.31 30.539 21.03 33.792 19.943 35.39 C 18.827 35.868 21.751 34.25 22.628 36.521 L 20.249 40.837 C 20.249 41.356 17.08 41.676 16.083 41.517 C 8.271 38.926 2.79 31.166 2.79 22.478 C 2.79 11.596 11.598 2.788 22.48 2.788 C 33.322 2.788 43.14 11.873 43.1 22.755 C 43.1 31.443 36.718 39.787 28.906 42.418 C 27.909 42.617 27.303 40.773 27.303 40.214 L 27.303 34.754 C 27.303 32.92 26.704 31.725 25.988 31.127 Z M 44.96 22.518 C 44.96 10.082 34.876 -0.002 22.48 -0.002 C 10.044 -0.002 -0.04 10.082 -0.04 22.518 C -0.04 34.914 10.044 44.998 22.48 44.998 C 34.876 44.998 44.96 34.914 44.96 22.518 Z'
              fill='#62D5D6'
            />
            <path
              fill-rule='evenodd'
              clip-rule='evenodd'
              d='M 26.902 31.77 C 31.086 31.275 35.534 29.756 35.534 22.533 C 35.534 20.479 34.81 18.807 33.633 17.514 C 33.823 17.018 34.43 15.155 33.404 12.572 C 33.404 12.572 31.882 12.076 28.311 14.473 C 26.789 14.053 25.117 13.787 23.559 13.787 C 21.96 13.787 20.288 14.053 18.807 14.473 C 15.194 12.076 13.674 12.572 13.674 12.572 C 12.647 15.155 13.255 17.018 13.445 17.514 C 12.267 18.807 11.544 20.479 11.544 22.533 C 11.544 29.756 15.993 31.275 20.173 31.77 C 19.642 32.226 19.147 33.099 18.959 34.316 C 17.893 34.772 15.117 35.647 13.445 32.758 C 13.445 32.758 12.456 30.97 10.594 30.858 C 10.594 30.858 8.731 30.82 10.442 31.997 C 10.442 31.997 11.697 32.567 12.532 34.735 C 12.532 34.735 13.674 38.346 18.919 37.206 L 18.919 40.438 C 18.919 40.932 18.54 41.501 17.589 41.35 C 10.139 38.878 4.777 31.807 4.777 23.519 C 4.777 13.141 13.18 4.74 23.559 4.74 C 33.899 4.74 42.339 13.141 42.301 23.519 C 42.301 31.807 36.94 38.841 29.489 41.35 C 28.538 41.54 28.157 40.97 28.157 40.438 L 28.157 35.23 C 28.157 33.48 27.587 32.34 26.902 31.77 Z M 45 23.559 C 45 11.697 35.381 2.079 23.559 2.079 C 11.697 2.079 2.079 11.697 2.079 23.559 C 2.079 35.381 11.697 45 23.559 45 C 35.381 45 45 35.381 45 23.559 Z'
              fill='#E31B4D'
            />
          </g>
        </svg>
      ),
      description: 'GitHub',
      link: 'https://github.com/BarkoRD/daranget',
    },
    {
      src: (
        <svg viewBox='0 0 45 45' fill='none' xmlns='http://www.w3.org/2000/svg'>
          <path
            d='M 33.213 21.429 C 36.339 21.429 39.337 22.67 41.548 24.881 C 43.758 27.091 44.206 29.626 43.147 33.082 C 42.088 36.538 42.964 38.345 40.754 40.555 C 38.543 42.765 36.736 43.875 33.61 43.875 C 30.483 43.875 27.088 43.758 24.878 41.548 C 22.667 39.338 21.425 36.34 21.425 33.214 C 21.425 30.089 22.667 27.091 24.878 24.881 C 27.088 22.67 30.086 21.429 33.213 21.429 Z M 21.472 25.714 C 20.83 26.716 20.319 27.796 19.953 28.929 L 4.822 28.929 C 4.396 28.929 3.987 29.098 3.686 29.399 C 3.384 29.701 3.215 30.11 3.215 30.536 L 3.215 32.481 C 3.215 33.885 3.828 35.22 4.895 36.137 C 7.591 38.454 11.652 39.647 17.139 39.647 C 18.423 39.647 19.627 39.583 20.757 39.452 C 21.29 40.524 21.566 40.986 22.351 41.879 C 20.632 42.179 18.827 42.065 16.808 42.065 C 10.614 42.065 6.149 41.454 2.799 38.574 C 1.921 37.82 1.217 36.885 0.734 35.833 C 0.251 34.782 0 33.639 0 32.481 L 0 30.536 C 0 29.257 0.508 28.031 1.412 27.126 C 2.317 26.222 3.543 25.714 4.822 25.714 L 21.472 25.714 Z M 33.213 25.714 L 33.02 25.731 C 32.806 25.771 32.609 25.874 32.455 26.028 C 32.301 26.182 32.197 26.379 32.158 26.593 L 32.141 26.786 L 31.876 31.613 L 26.779 32.143 L 26.586 32.162 C 26.372 32.201 26.175 32.305 26.021 32.459 C 25.867 32.612 25.764 32.81 25.724 33.024 L 25.707 33.216 L 25.724 33.409 C 25.764 33.623 25.868 33.82 26.021 33.973 C 26.175 34.127 26.306 34.892 26.52 34.931 L 26.58 35.345 L 31.611 35.411 L 32.143 39.651 L 32.16 39.844 C 32.199 40.058 32.303 40.256 32.457 40.409 C 32.611 40.563 35.875 40.578 35.875 40.578 L 35.345 35.345 C 35.345 35.345 40.387 34.92 40.541 34.766 C 40.695 34.612 40.666 33.621 40.705 33.407 C 40.705 33.407 40.562 32.611 40.408 32.458 C 40.254 32.304 40.057 32.201 39.844 32.162 L 39.651 32.143 L 35.409 31.746 L 35.343 26.786 L 35.262 26.13 C 35.223 25.916 34.127 26.182 33.973 26.028 C 33.819 25.874 33.622 25.771 33.408 25.731 L 33.213 25.714 Z M 17.139 0 C 17.527 0 17.903 0.141 18.195 0.396 C 18.488 0.651 18.678 1.004 18.731 1.389 L 18.746 1.607 L 18.746 3.214 L 26.247 3.214 C 27.526 3.214 28.753 3.722 29.657 4.626 C 30.561 5.531 31.069 6.757 31.069 8.036 L 31.069 17.689 C 31.069 18.334 30.941 18.949 30.712 19.513 C 28.35 19.94 26.141 20.974 24.299 22.513 L 8.03 22.513 C 6.752 22.513 5.525 22.005 4.621 21.101 C 3.716 20.197 3.208 18.97 3.208 17.691 L 3.208 8.036 C 3.208 6.757 3.716 5.531 4.621 4.626 C 5.525 3.722 6.752 3.214 8.03 3.214 L 15.532 3.214 L 15.532 1.609 C 15.531 1.258 15.647 0.916 15.86 0.636 C 16.073 0.356 16.371 0.154 16.71 0.06 L 16.92 0.017 L 17.139 0 Z M 26.247 6.429 L 8.03 6.429 C 7.604 6.429 7.195 6.598 6.894 6.899 C 6.592 7.201 6.423 7.609 6.423 8.036 L 6.423 17.687 C 6.423 18.574 7.143 19.294 8.03 19.294 L 26.247 19.294 C 26.674 19.294 27.083 19.125 27.384 18.824 C 27.685 18.522 27.855 18.113 27.855 17.687 L 27.855 8.036 C 27.855 7.609 27.685 7.201 27.384 6.899 C 27.083 6.598 26.674 6.429 26.247 6.429 Z'
            fill='#62D5D6'
            transform='matrix(1, 0, 0, 1, 3.552713678800501e-15, 0)'
          />
          <path
            d='M 33.508 22.386 C 36.445 22.386 39.263 23.553 41.34 25.629 C 43.418 27.706 44.584 30.523 44.584 33.461 C 44.584 36.397 43.418 39.214 41.34 41.291 C 39.263 43.369 36.445 44.535 33.508 44.535 C 30.57 44.535 27.753 43.369 25.676 41.291 C 23.599 39.214 22.432 36.397 22.432 33.461 C 22.432 30.523 23.599 27.706 25.676 25.629 C 27.753 23.553 30.57 22.386 33.508 22.386 Z M 22.476 26.413 C 21.872 27.354 21.392 28.37 21.048 29.433 L 6.83 29.433 C 6.429 29.433 6.045 29.592 5.762 29.876 C 5.479 30.159 5.319 30.543 5.319 30.943 L 5.319 32.772 C 5.319 34.09 5.895 35.345 6.898 36.207 C 9.432 38.384 13.248 39.505 18.403 39.505 C 19.61 39.505 20.742 39.445 21.803 39.322 C 22.305 40.329 22.937 41.261 23.674 42.101 C 22.059 42.383 20.301 42.524 18.403 42.524 C 12.584 42.524 8.076 41.203 4.928 38.497 C 4.104 37.788 3.442 36.909 2.988 35.922 C 2.534 34.933 2.299 33.859 2.298 32.772 L 2.298 30.943 C 2.298 29.741 2.776 28.589 3.626 27.74 C 4.475 26.89 5.628 26.413 6.83 26.413 L 22.476 26.413 Z M 33.508 26.413 L 33.327 26.429 C 33.125 26.466 32.94 26.563 32.796 26.707 C 32.651 26.852 32.554 27.037 32.517 27.238 L 32.501 27.42 L 32.501 32.453 L 27.462 32.453 L 27.281 32.471 C 27.079 32.509 26.894 32.606 26.75 32.75 C 26.605 32.895 26.508 33.08 26.471 33.281 L 26.456 33.463 L 26.471 33.644 C 26.508 33.844 26.606 34.029 26.751 34.173 C 26.895 34.318 27.08 34.415 27.281 34.451 L 27.462 34.467 L 32.501 34.467 L 32.503 39.51 L 32.519 39.691 C 32.556 39.892 32.653 40.077 32.797 40.222 C 32.942 40.367 33.127 40.463 33.328 40.5 L 33.51 40.516 L 33.691 40.5 C 33.892 40.463 34.077 40.367 34.222 40.222 C 34.367 40.077 34.464 39.892 34.501 39.691 L 34.517 39.51 L 34.517 34.467 L 39.558 34.467 L 39.739 34.451 C 39.94 34.415 40.125 34.317 40.27 34.173 C 40.415 34.028 40.511 33.843 40.549 33.641 L 40.565 33.461 L 40.549 33.279 C 40.511 33.078 40.414 32.893 40.27 32.749 C 40.125 32.606 39.94 32.508 39.739 32.471 L 39.558 32.453 L 34.515 32.453 L 34.515 27.42 L 34.501 27.238 C 34.464 27.037 34.367 26.852 34.222 26.707 C 34.077 26.563 33.892 26.466 33.691 26.429 L 33.508 26.413 Z M 18.403 2.249 C 18.769 2.249 19.121 2.381 19.397 2.621 C 19.671 2.862 19.85 3.192 19.9 3.554 L 19.914 3.759 L 19.914 5.27 L 26.963 5.27 C 28.165 5.27 29.317 5.747 30.167 6.597 C 31.017 7.446 31.494 8.598 31.494 9.8 L 31.494 18.872 C 31.494 19.478 31.373 20.056 31.158 20.585 C 28.939 20.987 26.862 21.958 25.132 23.404 L 9.845 23.404 C 8.643 23.404 7.49 22.927 6.64 22.077 C 5.791 21.228 5.313 20.075 5.313 18.874 L 5.313 9.8 C 5.313 8.598 5.791 7.446 6.64 6.597 C 7.49 5.747 8.643 5.27 9.845 5.27 L 16.893 5.27 L 16.893 3.762 C 16.893 3.431 17.001 3.11 17.201 2.847 C 17.402 2.584 17.683 2.394 18.001 2.305 L 18.198 2.265 L 18.403 2.249 Z M 26.963 8.29 L 9.845 8.29 C 9.444 8.29 9.06 8.449 8.776 8.733 C 8.493 9.016 8.335 9.4 8.335 9.8 L 8.335 18.869 C 8.335 19.704 9.011 20.38 9.845 20.38 L 26.963 20.38 C 27.363 20.38 27.748 20.221 28.03 19.938 C 28.314 19.655 28.473 19.271 28.473 18.869 L 28.473 9.8 C 28.473 9.4 28.314 9.016 28.03 8.733 C 27.748 8.449 27.363 8.29 26.963 8.29 Z M 13.872 11.31 C 14.211 11.297 14.549 11.352 14.866 11.472 C 15.183 11.592 15.472 11.776 15.717 12.01 C 15.962 12.245 16.157 12.527 16.289 12.839 C 16.422 13.151 16.49 13.487 16.49 13.826 C 16.49 14.164 16.422 14.5 16.289 14.812 C 16.157 15.124 15.962 15.406 15.717 15.641 C 15.472 15.875 15.183 16.059 14.866 16.179 C 14.549 16.299 14.211 16.354 13.872 16.341 C 13.217 16.322 12.595 16.049 12.138 15.579 C 11.682 15.11 11.426 14.48 11.426 13.825 C 11.426 13.169 11.682 12.54 12.138 12.071 C 12.595 11.601 13.217 11.329 13.872 11.31 Z M 22.919 11.31 C 23.258 11.297 23.596 11.352 23.913 11.472 C 24.229 11.592 24.519 11.776 24.763 12.01 C 25.008 12.245 25.203 12.527 25.335 12.839 C 25.468 13.151 25.537 13.487 25.537 13.826 C 25.537 14.164 25.468 14.5 25.335 14.812 C 25.203 15.124 25.008 15.406 24.763 15.641 C 24.519 15.875 24.229 16.059 23.913 16.179 C 23.596 16.299 23.258 16.354 22.919 16.341 C 22.264 16.322 21.641 16.049 21.185 15.579 C 20.728 15.11 20.473 14.48 20.473 13.825 C 20.473 13.169 20.728 12.54 21.185 12.071 C 21.641 11.601 22.264 11.329 22.919 11.31 Z'
            fill='#E31B4D'
            transform='matrix(1, 0, 0, 1, 3.552713678800501e-15, 0)'
          />
        </svg>
      ),
      description: 'Discord Bot',
      link: 'https://discord.com/oauth2/authorize?client_id=1216564307333218405&permissions=274877975552&scope=applications.commands+bot',
    },
    {
      src: (
        <svg viewBox='0 0 40 41' fill='none' xmlns='http://www.w3.org/2000/svg'>
          <path
            d='M 34.688 19.557 L 31.876 19.557 L 31.876 12.057 C 31.876 9.985 30.198 8.307 28.126 8.307 L 20.626 8.307 L 20.626 5.494 C 20.626 2.907 18.526 0.807 15.938 0.807 C 13.351 0.807 11.251 2.907 11.251 5.494 L 11.251 8.307 L 3.751 8.307 C 1.679 8.307 0.02 9.985 0.02 12.057 L 0.01 19.182 L 2.813 19.182 C 5.607 19.182 7.876 21.45 7.876 24.244 C 7.876 27.038 5.607 29.307 2.813 29.307 L 0.01 29.307 L 0.001 36.432 C 0.001 38.503 1.679 40.182 3.751 40.182 L 10.876 40.182 L 10.876 37.369 C 10.876 34.575 13.145 32.307 15.938 32.307 C 18.732 32.307 21.001 34.575 21.001 37.369 L 21.001 40.182 L 28.126 40.182 C 30.198 40.182 31.876 38.503 31.876 36.432 L 31.876 28.932 L 34.688 28.932 C 37.276 28.932 39.376 26.832 39.376 24.244 C 39.376 21.657 37.276 19.557 34.688 19.557 Z'
            fill='#62D5D6'
          />
          <path
            d='M 35.525 21.612 L 32.939 21.612 L 32.939 14.715 C 32.939 12.81 31.395 11.267 29.49 11.267 L 22.593 11.267 L 22.593 8.68 C 22.593 6.3 20.662 4.369 18.282 4.369 C 15.902 4.369 13.971 6.3 13.971 8.68 L 13.971 11.267 L 7.074 11.267 C 5.168 11.267 3.642 12.81 3.642 14.715 L 3.634 21.268 L 6.212 21.268 C 8.781 21.268 10.867 23.354 10.867 25.923 C 10.867 28.493 8.781 30.579 6.212 30.579 L 3.634 30.579 L 3.625 37.131 C 3.625 39.037 5.168 40.58 7.074 40.58 L 13.626 40.58 L 13.626 37.994 C 13.626 35.424 15.713 33.338 18.282 33.338 C 20.851 33.338 22.938 35.424 22.938 37.994 L 22.938 40.58 L 29.49 40.58 C 31.395 40.58 32.939 39.037 32.939 37.131 L 32.939 30.234 L 35.525 30.234 C 37.905 30.234 39.836 28.303 39.836 25.923 C 39.836 23.544 37.905 21.612 35.525 21.612 Z'
            fill='#E31B4D'
          />
        </svg>
      ),
      description: 'Extension',
      link: 'https://drive.google.com/uc?id=186WEFcavZiOSzu6l44iZZFy92qAPR8KB&export=download',
    },
  ]

  return (
    <header className='container'>
      <div className='container__img-logo'>
        <img src='./daranget-logo.png' alt='daranget logo' draggable='false' />
      </div>
      <div className='container__apps-container'>
        {apps.map((app, e) => (
          <Aplication
            key={e}
            src={app.src}
            description={app.description}
            link={app.link}
          />
        ))}
        <Pepper />
      </div>
    </header>
  )
}

export default Header
